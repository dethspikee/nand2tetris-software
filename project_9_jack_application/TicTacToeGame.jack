class TicTacToeGame {
  field TicTacToe game;

  constructor TicTacToeGame new() {
    let game = TicTacToe.new();
    return this;
  }

  method int ask() {
    var int i;
    do Output.moveCursor(0, 0);
    let i = Keyboard.readInt("Enter your pick [1-9]: ");
    return i;
  }

  method boolean validInput(int input) {
    if ((input > 0) & (input < 10)) {
      return true;
    } 
    else {
      return false;
    }
  }

  method void dispose() {
    do Memory.deAlloc(this);
    return;
  }

  method void run() {
    var boolean exit; 
    var int input;
    let exit = false;

    do game.setCurrentSymbol(79);
    do game.draw();
    while (~exit) {
      let input = ask();      
      if (~validInput(input)) {
        do Output.moveCursor(0, 23);
        do Output.printString("Invalid position.");
        do Sys.wait(5000);
        do Output.moveCursor(0, 23);
        do Output.printString("                 ");
      } else {
        do game.setPosition(input);
        do Screen.clearScreen();
        do game.draw();
      }
      
      if (game.getCurrentSymbol() = 88) {
        do game.setCurrentSymbol(79);
      } else {
        do game.setCurrentSymbol(88);
      }
    } 

    return;
  }
}
